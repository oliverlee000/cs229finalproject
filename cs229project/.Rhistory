library(readr)
LADECv1_2019 <- read_csv("Documents/cs229project/LADECv1-2019.csv",
col_types = cols(relation = col_factor(levels = c("1",
"2", "3", "4", "5", "6", "7", "8",
"9", "10", "11", "12", "13", "14",
"15", "16", "17", "18", "19", "20",
"21", "22"))), skip = 1)
View(LADECv1_2019)
data$c1factor <- as.factor(data$c1)
type(data$c1)
typeof(data$c1)
colnames(df)
colnames(df)
df <- read_csv("Documents/cs229project/LADECv1-2019.csv", col_types = cols(relation = col_factor(levels = c("1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22"))), skip = 1)
df$c1factor <- as.factor(df$c1)
View(df)
df$c1factor
df$c2factor <- as.factor(df$c2)
install.packages("aod")
install.packages("ggplot2")
library(ggplot2)
library(aod)
df$c1factor <- factor(df$c1)
df$c2factor <- factor(df$c2)
df$c1factor
df$c2factor
df <- filter(df, relation!=NULL)
install.packages("dlypr")
install.packages("dplyr")
library(dplyr)
df <- df %>% filter(relation != NULL)
df <- df %>% filter(relation != NA)
df <- read_csv("Documents/cs229project/LADECv1-2019.csv", col_types = cols(relation = col_factor(levels = c("1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22"))), skip = 1)
df <- df_raw %>% drop_na(relation)
library(dplyr)
df <- df_raw %>% drop_na(relation)
library(tidyr)
install.packages("tidyr")
library(tidyr)
df <- df_raw %>% drop_na(relation)
df_raw <- read_csv("Documents/cs229project/LADECv1-2019.csv", col_types = cols(relation = col_factor(levels = c("1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22"))), skip = 1)
df <- df_raw %>% drop_na(relation)
install.packages("stringr")
library(stringr)
df <- df_raw %>% drop_na(relation) %>% filter(substr(relation, str_length(relation) - 1, str_length(relation) - 1) != "s")
df <- df_raw %>% drop_na(relation) %>% filter(substr(c2, str_length(relation) - 1, str_length(relation) - 1) != "s")
df = df[sample(1:nrow(df)), ]
test = df[1:cutoff1]
cutoff1 = 0.8 * nrow(df)
cutoff2 = 0.9 * nrow(df)
test = df[1:cutoff1]
cutoff1 = 0.8 * nrow(df)
cutoff2 = 0.9 * nrow(df)
test = df[1:cutoff1, ]
dev = df[cutoff1:cutoff2, ]
cutoff1
cutoff2
cutoff1 = floor(0.8 * nrow(df))
cutoff2 = floor(0.9 * nrow(df))
ff1 = floor(0.8 * nrow(df))
cutoff2 = floor(0.9 * nrow(df))
test = df[1:cutoff1, ]
dev = df[cutoff1:cutoff2, ]
train = df[cutoff2:nrow(df), ]
View(test)
lm <- glm(relation ~ c1factor + c2factor, data = test, family = "binomial")
View(test)
test$c1factor <- factor(test$c1)
test$c2factor <- factor(test$c2)
View(df_raw)
lm <- glm(relation ~ c1factor + c2factor, data = test, family = "binomial")
summary(lm)
install.packages(reshape2)
install.packages("reshape2")
library(reshape2)
install.packages("foreign")
library(foreign)
install.packages('nnet')
library(nnet)
lm <- multinom(relation ~ c1factor + c2factor, data = test)
df_raw <- read_csv("Documents/cs229project/LADECv1-2019.csv", skip = 1)
f <- df_raw %>% drop_na(relation) %>% filter(substr(c2, str_length(relation) - 1, str_length(relation) - 1) != "s")
df = df[sample(1:nrow(df)), ]
cutoff1 = floor(0.8 * nrow(df))
cutoff2 = floor(0.9 * nrow(df))
test = df[1:cutoff1, ]
dev = df[cutoff1:cutoff2, ]
train = df[cutoff2:nrow(df), ]
test$c1factor <- factor(test$c1)
test$c2factor <- factor(test$c2)
test$relationfactor <- factor(test$relation)
lm <- multinom(relationfactor ~ c1factor + c2factor, data = test)
test$c2factor
lm <- nnet(relationfactor ~ c1factor + c2factor, test, family = "multinomial", size = 10000000)
df %>% mutate(c1factor = factor(df$c1))
df %>% mutate(c1factor = factor(c1))
df = df %>% mutate(c1factor = factor(c1))
df = df %>% mutate(metarelation = case_when(
relation == 1 ~0,
relation %in% c(2, 3, 12, 15, 16) ~1,
relation == 4 ~2,
relation %in% c(5, 13) ~3,
relation == 6 ~4,
relation %in% c(7, 21, 22) ~5,
relation == 8 ~6,
relation %in% c(9, 10) ~7,
relation == 11 ~8,
relation == 14 ~9,
relation == 17 ~10,
relation == 18 ~11,
relation == 19 ~12,
relation == 20 ~13))
df = df %>% mutate(metarelationfactor = factor(metarelation))
df$metarelationfactor
df = df %>% mutate(metarelationfactor = factor(metarelation))
cutoff1 = floor(0.8 * nrow(df))
cutoff2 = floor(0.9 * nrow(df))
test = df[1:cutoff1, ]
dev = df[cutoff1:cutoff2, ]
train = df[cutoff2:nrow(df), ]
lm <- nnet(metarelationfactor ~ c1factor + c2factor, test, family = "multinomial", size = 10000000)
f_raw <- read_csv("Documents/cs229project/LADECv1-2019.csv", skip = 1)
df <- df_raw %>% drop_na(relation) %>% filter(substr(c2, str_length(relation) - 1, str_length(relation) - 1) != "s")
df = df[sample(1:nrow(df)), ]
df = df %>% mutate(c1factor = factor(c1))
df = df %>% mutate(c2factor = factor(c2))
df = df %>% mutate(metarelation = case_when(
relation == 1 ~0,
relation %in% c(2, 3, 12, 15, 16) ~1,
relation == 4 ~2,
relation %in% c(5, 13) ~3,
relation == 6 ~4,
relation %in% c(7, 21, 22) ~5,
relation == 8 ~6,
relation %in% c(9, 10) ~7,
relation == 11 ~8,
relation == 14 ~9,
relation == 17 ~10,
relation == 18 ~11,
relation == 19 ~12,
relation == 20 ~13))
df = df %>% mutate(metarelationfactor = factor(metarelation))
cutoff1 = floor(0.8 * nrow(df))
cutoff2 = floor(0.9 * nrow(df))
test = df[1:cutoff1, ]
dev = df[cutoff1:cutoff2, ]
train = df[cutoff2:nrow(df), ]
lm <- nnet(metarelationfactor ~ c1factor + c2factor, test, family = "multinomial", size = 10000000)
lm <- glmnet(metarelationfactor ~ c1factor + c2factor, test, family = "multinomial")
install.packages("glmnet")
library(glmnet)
lm <- glmnet(metarelationfactor ~ c1factor + c2factor, test, family = "multinomial")
df_raw <- read_csv("Documents/cs229project/LADECv1-2019.csv", skip = 1)
df <- df_raw %>% drop_na(relation) %>% filter(substr(c2, str_length(relation) - 1, str_length(relation) - 1) != "s")
df = df[sample(1:nrow(df)), ]
df = df %>% mutate(c1factor = factor(c1))
df = df %>% mutate(c2factor = factor(c2))
df = df %>% mutate(metarelation = case_when(
relation == 1 ~0,
relation %in% c(2, 3, 12, 15, 16) ~1,
relation == 4 ~2,
relation %in% c(5, 13) ~3,
relation == 6 ~4,
relation %in% c(7, 21, 22) ~5,
relation == 8 ~6,
relation %in% c(9, 10) ~7,
relation == 11 ~8,
relation == 14 ~9,
relation == 17 ~10,
relation == 18 ~11,
relation == 19 ~12,
relation == 20 ~13))
df = df %>% mutate(metarelationfactor = factor(metarelation))
cutoff1 = floor(0.8 * nrow(df))
cutoff2 = floor(0.9 * nrow(df))
test = df[1:cutoff1, ]
dev = df[cutoff1:cutoff2, ]
train = df[cutoff2:nrow(df), ]
lm <- glmnet(metarelationfactor ~ c1factor + c2factor, test, family = "multinomial")
lm <- glmnet(metarelationfactor ~ c1factor + c2factor, data = test, family = "multinomial")
test$c1factor
test$c2factor
test$metarelationfactor
typeof(test$metarelationfactor)
typeof(test$c2factor)
lm <- glmnet(metarelationfactor ~ c1factor + c2factor, data = test, family = "multinomial")
lm <- glmnet(metarelation ~ c1factor + c2factor, data = test, family = "multinomial")
df_raw <- read_csv("Documents/cs229project/LADECv1-2019.csv", skip = 1)
df <- df_raw %>% drop_na(relation) %>% filter(substr(c2, str_length(relation) - 1, str_length(relation) - 1) != "s")
df = df[sample(1:nrow(df)), ]
df = df %>% mutate(c1factor = as.factor(c1))
df = df %>% mutate(c2factor = as.factor(c2))
df = df %>% mutate(metarelation = case_when(
relation == 1 ~0,
relation %in% c(2, 3, 12, 15, 16) ~1,
relation == 4 ~2,
relation %in% c(5, 13) ~3,
relation == 6 ~4,
relation %in% c(7, 21, 22) ~5,
relation == 8 ~6,
relation %in% c(9, 10) ~7,
relation == 11 ~8,
relation == 14 ~9,
relation == 17 ~10,
relation == 18 ~11,
relation == 19 ~12,
relation == 20 ~13))
df = df %>% mutate(metarelationfactor = as.factor(metarelation))
cutoff1 = floor(0.8 * nrow(df))
cutoff2 = floor(0.9 * nrow(df))
test = df[1:cutoff1, ]
dev = df[cutoff1:cutoff2, ]
train = df[cutoff2:nrow(df), ]
typeof(test$metarelationfactor)
lm <- glmnet(metarelationfactor ~ c1factor + c2factor, data = test, family = "multinomial")
lm <- multinom(metarelationfactor ~ c1factor + c2factor, data = test)
lm <- multinom(metarelationfactor ~ c1factor + c2factor, data = test, size = 10000)
lm <- nnet(metarelationfactor ~ c1factor + c2factor, data = test, family = "multinomial", size = 10000)
lm <- nnet(metarelationfactor ~ c1factor + c2factor, data = test, family = "multinomial", MaxNWts = 1000000)
lm <- nnet(metarelationfactor ~ c1factor + c2factor, data = test, size = 0, family = "multinomial", MaxNWts = 1000000)
lm <- nnet(metarelationfactor ~ c1factor + c2factor, data = test, size = 1, family = "multinomial", MaxNWts = 1000000)
summary(lm)
lm <- nnet(metarelationfactor ~ c1factor + c2factor, data = test, size = 1000, family = "multinomial", MaxNWts = 1000000)
lm <- nnet(metarelationfactor ~ c1factor + c2factor, data = test, size = 800, family = "multinomial", MaxNWts = 10000000)
Sys.setenv('R_MAX_VSIZE'=32000000000)
lm <- nnet(metarelationfactor ~ c1factor + c2factor, data = test, size = 800, family = "multinomial", MaxNWts = 10000000)
library(readr)
library(aod)
library(ggplot2)
library(dplyr)
library(tidyr)
library(stringr)
library(reshape2)
library(foreign)
library(nnet)
library(glmnet)
library(neuralnet)
library(caret)
library(VGAM)
df_raw <- read_csv("Documents/cs229project/LADECv1-2019.csv", skip = 1)
df <- df_raw %>% drop_na(relation) %>% filter(substr(c2, str_length(relation) - 1, str_length(relation) - 1) != "s")
df = df[sample(1:nrow(df)), ]
df = df %>% mutate(c1factor = as.factor(c1))
df = df %>% mutate(c2factor = as.factor(c2))
df = df %>% mutate(metarelation = case_when(
relation == 1 ~0,
relation %in% c(2, 3, 12, 15, 16) ~1,
relation == 4 ~2,
relation %in% c(5, 13) ~3,
relation == 6 ~4,
relation %in% c(7, 21, 22) ~5,
relation == 8 ~6,
relation %in% c(9, 10) ~7,
relation == 11 ~8,
relation == 14 ~9,
relation == 17 ~10,
relation == 18 ~11,
relation == 19 ~12,
relation == 20 ~13))
df = df %>% mutate(model.matrix( ~ c1 - 1, data = df))
df = df %>% mutate(model.matrix( ~ c2 - 1, data = df))
df = df %>% mutate(metarelationfactor = as.factor(metarelation))
cutoff1 = floor(0.8 * nrow(df))
cutoff2 = floor(0.9 * nrow(df))
test = df[1:cutoff1, ]
dev = df[cutoff1:cutoff2, ]
train = df[cutoff2:nrow(df), ]
# Create baseline models
View(f_raw)
library(readr)
library(aod)
library(ggplot2)
library(dplyr)
library(tidyr)
library(stringr)
library(reshape2)
library(foreign)
library(nnet)
library(glmnet)
library(neuralnet)
library(caret)
library(VGAM)
df_raw <- read_csv("Documents/cs229project/LADECv1-2019.csv", skip = 1)
df <- df_raw %>% drop_na(relation) %>% filter(substr(c2, str_length(relation) - 1, str_length(relation) - 1) != "s")
df = df[sample(1:nrow(df)), ]
df = df %>% mutate(c1factor = as.factor(c1))
df = df %>% mutate(c2factor = as.factor(c2))
df = df %>% mutate(metarelation = case_when(
relation == 1 ~0,
relation %in% c(2, 3, 12, 15, 16) ~1,
relation == 4 ~2,
relation %in% c(5, 13) ~3,
relation == 6 ~4,
relation %in% c(7, 21, 22) ~5,
relation == 8 ~6,
relation %in% c(9, 10) ~7,
relation == 11 ~8,
relation == 14 ~9,
relation == 17 ~10,
relation == 18 ~11,
relation == 19 ~12,
relation == 20 ~13))
df = df %>% mutate(model.matrix( ~ c1 - 1, data = df))
df = df %>% mutate(model.matrix( ~ c2 - 1, data = df))
df = df %>% mutate(metarelationfactor = as.factor(metarelation))
typeof(df$c2factor)
df$c2factor
View(f)
library(readr)
library(aod)
library(ggplot2)
library(dplyr)
library(tidyr)
library(stringr)
library(reshape2)
library(foreign)
library(nnet)
library(glmnet)
library(neuralnet)
library(Rtsne)
library(caret)
library(VGAM)
library(Metrics)
library(DPpack)
library(ggbeeswarm)
evaluate = function(a, y) {
for (x in a){
# Compute accuracy for train set
predictions <- predict(x, newdata = train, type = "class")
predictions <- factor(predictions, levels = levels(train[[y]]))
confusion_matrix <- confusionMatrix(predictions, train[[y]])
accuracy <- confusion_matrix$overall["Accuracy"]
print(paste("Accuracy for train set:", accuracy))
# Compute accuracy for dev set
predictions <- predict(x, newdata = dev, type = "class")
predictions <- factor(predictions, levels = levels(dev[[y]]))
confusion_matrix <- confusionMatrix(predictions, dev[[y]])
accuracy <- confusion_matrix$overall["Accuracy"]
print(paste("Accuracy for dev set:", accuracy))
}
}
setwd('/Users/oliverlee/Documents/cs229project')
df_raw <- read_csv("./LADECv1-2019.csv")
#vecs_raw <- read_delim("./glove.6B/glove.6B.50d.txt", quote = "", col_names = FALSE, n_max = Inf, delim = " ", skip = 1)
df <- df_raw %>% drop_na(relation) %>% drop_na(category1) %>% filter(substr(c2, str_length(relation) - 1, str_length(relation) - 1) != "s")
#df <- df %>% inner_join(vecs_raw, by = join_by(c1 == X1), suffix = c("", ".c1"), keep = TRUE)
#df <- df %>% left_join(vecs_raw, by = join_by(c2 == X1), suffix = c(".c1", ".c2"), keep = TRUE)
df = df[sample(1:nrow(df)), ]
df = df %>% mutate(c1factor = as.factor(c1))
df = df %>% mutate(c2factor = as.factor(c2))
df = df %>% mutate(category1f = as.factor(category1))
df = df %>% mutate(category2f = as.factor(category2))
df = df %>% mutate(cat12 = paste(category1, category2))
df = df %>% mutate(semrel_f = as.factor(case_when(
relation == 1 ~0,
relation %in% c(2, 3, 12, 15, 16) ~1,
relation == 4 ~2,
relation %in% c(5, 13) ~3,
relation == 6 ~4,
relation %in% c(7, 21, 22) ~5,
relation == 8 ~6,
relation %in% c(9, 10) ~7,
relation == 11 ~8,
relation == 14 ~9,
relation == 17 ~10,
relation == 18 ~11,
relation == 19 ~12,
relation == 20 ~13)))
df = df %>% mutate(metrel_f = as.factor(case_when(
relation == 1 ~0,
relation %in% c(2, 3, 4, 12, 15, 16, 20) ~1,
relation %in% c(11, 19) ~2,
relation %in% c(5, 6, 7, 9, 10, 13, 13, 14, 21, 22) ~3,
relation %in% c(8, 14, 18) ~4)))
df = df %>% mutate(model.matrix( ~ c1 - 1, data = df))
df = df %>% mutate(model.matrix( ~ c2 - 1, data = df))
cutoff1 = floor(0.8 * nrow(df))
cutoff2 = floor(0.9 * nrow(df))
train = df[1:cutoff1, ]
dev = df[cutoff1:cutoff2, ]
test = df[cutoff2:nrow(df), ]
# Create baseline models
actual <- multinom(semrel_f ~ category1f + category2f, train, MaxNWts = 100000)
predicted_probs <- predict(actual, newdata = dev, type = "probs")
semrel_dummy = model.matrix(~ semrel_f - 1, data = dev)
cross_entropy_per_observation <- rowSums(loss.cross.entropy(predicted_probs, semrel_dummy))
dev <- dev %>% mutate(loss = cross_entropy_per_observation)
ggplot(data = dev) + aes(y = loss, x = cat12) + geom_beeswarm() + coord_flip()
ggplot(data = dev) + aes(y = loss, x = cat12) + geom_beeswarm()
devtrain = df[1:cutoff2,]
traindev = df[1:cutoff2,]
actual <- multinom(semrel_f ~ category1f + category2f, train, MaxNWts = 100000)
predicted_probs <- predict(actual, newdata = traindev, type = "probs")
semrel_dummy = model.matrix(~ semrel_f - 1, data = traindev)
cross_entropy_per_observation <- rowSums(loss.cross.entropy(predicted_probs, semrel_dummy))
traindev <- traindev %>% mutate(loss = cross_entropy_per_observation)
ggplot(data = traindev) + aes(y = loss, x = cat12) + geom_beeswarm()
plot(traindev$cat12, traindev$loss)
ggplot(data = traindev) + aes(y = loss, x = cat12)
ggplot(data = traindev) + aes(y = loss, x = cat12) + geom_beeswarm() + coord_flip()
ggplot(data = traindev) + aes(y = loss, x = cat12) + geom_sina() + coord_flip()
? barplot
barplot(loss ~ cat12, data = traindev)
barplot(traindev$loss ~ traindev$cat12)
barplot(traindev$loss ~ traindev$category1)
boxplot(loss ~ category1+category2, data = traindev)
boxplot(loss ~ cat12, data = traindev)
View(devtrain)
traindev <- traindev %>% mutate(loss = cross_entropy_per_observation) %>% filter(category1, category2, cat12, loss)
traindev <- c(traindev$cat1, cross_entropy_per_observation)
traindev <- c(traindev$cat12, cross_entropy_per_observation)
traindev = df[1:cutoff2,]
actual <- multinom(semrel_f ~ category1f + category2f, train, MaxNWts = 100000)
predicted_probs <- predict(actual, newdata = traindev, type = "probs")
semrel_dummy = model.matrix(~ semrel_f - 1, data = traindev)
cross_entropy_per_observation <- rowSums(loss.cross.entropy(predicted_probs, semrel_dummy))
traindev <- c(traindev$cat12, cross_entropy_per_observation)
plot(traindev$cat12, traindev$loss)
colnames(train)
colnames(traindev)
traindev
traindev = df[1:cutoff2,]
test = df[cutoff2:nrow(df), ]
# Create baseline models
actual <- multinom(semrel_f ~ category1f + category2f, train, MaxNWts = 100000)
predicted_probs <- predict(actual, newdata = traindev, type = "probs")
semrel_dummy = model.matrix(~ semrel_f - 1, data = traindev)
cross_entropy_per_observation <- rowSums(loss.cross.entropy(predicted_probs, semrel_dummy))
traindev <- traindev %>% mutate(loss = cross_entropy_per_observation) %>% filter(category1, category2, cat12, loss) %>% select(category1, category2, loss)
actual <- multinom(semrel_f ~ category1f + category2f, train, MaxNWts = 100000)
predicted_probs <- predict(actual, newdata = traindev, type = "probs")
semrel_dummy = model.matrix(~ semrel_f - 1, data = traindev)
cross_entropy_per_observation <- rowSums(loss.cross.entropy(predicted_probs, semrel_dummy))
traindev <- traindev %>% mutate(loss = cross_entropy_per_observation) %>% select(category1, category2, cat12, loss) %>% select(category1, category2, loss)
traindev = df[1:cutoff2,]
test = df[cutoff2:nrow(df), ]
# Create baseline models
actual <- multinom(semrel_f ~ category1f + category2f, train, MaxNWts = 100000)
predicted_probs <- predict(actual, newdata = traindev, type = "probs")
semrel_dummy = model.matrix(~ semrel_f - 1, data = traindev)
cross_entropy_per_observation <- rowSums(loss.cross.entropy(predicted_probs, semrel_dummy))
traindev <- traindev %>% mutate(loss = cross_entropy_per_observation) %>% select(category1, category2, cat12, loss) %>% select(category1, category2, loss)
View(traindev)
View(df)
traindev <- df[1:cutoff2,] %>% mutate(loss = cross_entropy_per_observation) %>% select(stim, category1, category2, cat12, loss) %>% select(category1, category2, loss)
View(traindev)
traindev <- df[1:cutoff2,] %>% mutate(loss = cross_entropy_per_observation) %>% select(stim, category1, category2, cat12, loss) %>% select(category1, category2, loss)
traindev <- df[1:cutoff2,] %>% mutate(loss = cross_entropy_per_observation) %>% select(stim, category1, category2, cat12, loss)
View(traindev)
plot(traindev$cat12, traindev$loss)
ggplot(data = traindev) + aes(y = loss, x = cat12) + geom_sina() + coord_flip()
barplot(traindev$loss ~ traindev$cat12)
barplot(loss~category1+category2, data = traindev)
barplot(loss~category1+category2, traindev)
traindev <- df[1:cutoff2,] %>% mutate(loss = cross_entropy_per_observation) %>% select(stim, category1f, category2f, loss)
barplot(loss~category1f+category2f, traindev)
traindev$category1f
typeof(traindev$category1f)
barplot(loss~category1f+category2f, traindev)
barplot(loss~category1f, traindev)
bactual2 <- multinom(semrel_f ~ category1f * category2f, train, MaxNWts = 100000)
barplot(loss~category1f, traindev)
ggplot(data = traindev, mapping = aes(x = cat12, y = avgLSAmount)) +
geom_bar(stat = "identity") +
labs(x = "zipcode")
traindev <- df[1:cutoff2,] %>% mutate(loss = cross_entropy_per_observation) %>% select(stim, category1f, category2f, cat12, loss)
ggplot(data = traindev, mapping = aes(x = cat12, y = loss)) +
geom_bar(stat = "dog") +
labs(x = "cat")
ggplot(data = traindev, mapping = aes(x = cat12, y = loss)) +
geom_bar(stat = "identity") +
labs(x = "cat")
?geom_bar
ggplot(data = traindev, mapping = aes(x = cat12, y = loss)) +
geom_bar(stat = "mean") +
labs(x = "cat")
ggplot(data = traindev, mapping = aes(x = cat12, y = loss)) +
geom_boxplot(stat = "mean") +
labs(x = "categories")
ggplot(data = traindev, mapping = aes(x = cat12, y = loss)) +
geom_boxplot() +
labs(x = "categories")
traindev[-433]
traindev[-433,]
ggplot(data = traindev[-433,], mapping = aes(x = cat12, y = loss)) +
geom_boxplot() +
labs(x = "categories")
View(df)
df %>% filter(relation == 3)
df %>% filter(relation == 6)[1:20]
df %>% filter(relation == 6)
x = df %>% filter(relation == 6)
x[1:10]
print(x, n=50)
